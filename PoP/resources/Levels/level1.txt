3 9
room 1 1
b;b;b;b;b;b;b;b;b;b
rs d2(2,0.5) d2(3,0.25) rsb;fs prt;-;bricks(3);-;pl b;prm fl potion1 b;fr fl b;fr fl t nb;fr fl bricks(1) b
fs pl b;prm prt;-;bricks(3);-;rf ls(mark(3)) d2(2,0.4,mark(1)) lsb;cs d2(2,0.5) d1(3,0.1) csb;cs d1(2,0.5,mark(3)) d2(3,0.1) csb;cs d1(2,0.5) d1(3,0.1) csb;cs d2(2,0.4) d2(3,0.1) csb
fs pl b;prm prt;-;bricks(3);-;rf ls d2(2,0.5,mark(2)) lsb;cs d2(2,0.5) d1(3,0.1) csb;cs d1(2,0.3) d1(3,0.2) csb;cs d1(2,0.4) d2(3,0.3) random csb;cs d2(2,0.4) d2(3,0.1) csb

room 1 7
b;b;b;b;b;b;b;b;b;b
doorfr door(5,door_closed,0) fst;-;-;lf b;rf lf b;rf lf bricks(1) b;rf lf b; rf lf bricks(1) b;rf ls d1(2,0.3,mark(1)) lsb;cs(mark(3)) d1(2,0.3) d2(3,0.2) csb;
fs lf b;rf lf t b;rf lf t b;rf pl pshadow bricks(1) b; prm fst;fs ls d2(2,0.5,mark(2)) lsb;cs random d2(2,0.5) d1(3,0.1) csb;cs d2(2,0.5,mark(1)) d2(3,0.1) csb;cs d1(2,0.5) d2(3,0.1) csb;cs random d1(2,0.5) d1(3,0.1) csb
cs d2(2,0.5) d2(3,0.2) csb;cs d2(2,0.5) d2(3,0.4) csb;cs d2(2,0.4,mark(3)) d1(3,0.3) csb;rs d1(2,0.5) d2(3,0.3) rsb;fs bl b;pl pshadow br b;prm;loose lf b;rf lf bricks(1) b;rf ls d1(2,0.5) lsb;

room 1 8
;;;;;;;;;
;;;;;;;;;
;;;;;;;;;
;;;;;;;;;

room 1 9
;;;;;;;;;
;;;;;;;;;
rf lf b;rf lf b;enemy(red,left,3,1) rf lf b;rf lf b;rf lf b;rf lf b;rf lf b;rf lf b;rf lf b;rf lf b
;;;;;;;;;



- = nothing
b = base
lsb = left stack base
rsb = right stack base
csb = centre stack base
ssb = single stack base
rs = right stack
fs = face stack
ls = left stack
cs = centre stack
ss = single stack
fst = face stack top
fs = face stack main
d1(x,y) = thin divider (stack row, position from the start of the column)
d2(x,y) = fat divider (stack row, position from the start of the column)
prt = pillar right top
pl = pillar left
pshadow = pillar shadow
prm = pillar right main
potion1 = 1 life potion
t = torch
bricks(x) = bricks x of background
mark(x) = marks x of a divider/stack
random = random block
rf = right floor
lf = left floor
bl = broken left
br = broken right
loose = loose floor
doorfr = door frame right
door(identificador, estado, frame) = door
enemy(colour, orientacion, vida, dificultad)